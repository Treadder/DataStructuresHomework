/*pseudocode

    if openfile() returns false{
        exit program with error
    }, 
    else{
        grab file stream it returned and note the first patient ID.
    
        for each index in dayRecord{

            if no more records exist in data{
            
                close all files
            }

            else{
                
                grab the next record. if matches_id(target_id) is false
            
            
            
            }

        }

    }

    */


    /*EXPLORING DATASET
* 
*  There are some dirty rows, as you can tell by the different user id's sprinkled in the set.
* 
*  Calorie count can unexpectedly jump and fall in an entry or 2. I assume it's calorie/current minute with sensor limitations
* 
*  Distance seems to be only during the minute in question, not compounding.
* 
 TODO
* 
* A) FILTER the data that is not the target (first entry's ID should do it)
* B) DE-DUPE the data. Search for duplicate lines I guess, and remove them.
* C) Clean each record with missing fields
      You must open “FitbitData.csv” for mode read; check for success

-      You must read each record in the file as a string, one line at a time; if the record does not belong to the target patient, then it should be discarded

-      You must parse each record into the corresponding fields, and store into the FitbitData array; note: not all fields have values, some are “empty” or null;
        if some of the fields are “empty” or null, then you must perform data cleansing and insert values to construct a record that is consistent with the others; the
            data inserted should not represent valid values

-      You must compute the total calories burned, distance walked in miles, floors walked, and steps taken

-      You must compute average heartrate over the 24 hour period

-      You must report the max steps taken in one minute over the 24 hour period; if there are multiple minutes throughout the day where the max 
        is discovered, then report the one that is the latest in the 24 hour period

-      You must report the longest consecutive range of poor sleep; a range is defined as one or more consecutive minutes where the sleepLevel > 1; 
        the poorest sleep is not based on the length of the range, but the sum of the sleep levels in the range; the max sum of the ranges is considered 
            the poorest sleep (report the starting and ending minutes of range)

-      You must open “Results.csv” for mode write; this will either create a new .csv or overwrite an existing one

-      You must output two lines to “Results.csv” and to the screen in the following format:

o   Line 1: Header line: Total Calories,Total Distance,Total Floors,Total Steps,Avg Heartrate,Max Steps,Sleep

o   Line 2: valueCalories,valueDistance,valueFloors,valueSteps,valueHeartrate,valueMax,valueSleepStart:valueSleepEnd

o   Lines 3 – N: the filtered, deduped, and cleansed data in the original FitbitData.csv format

-      You must close “FitbitData.csv” and “Results.csv”



IV. Submitting Assignments:

    REVIEW The requirements.

  
* 
* 
*/




/*

record_matches_patient(record, patient_id){

returns true if the record id matches patient id, false if not

}


record_has_empty(record){

returns true if there are missing fields in a record, false if not

}

*/










/*
bool open_file(char filename[], FILE *file_pointer) {

	FILE *data = fopen(filename, "r");  //open file in read mode

	if (data != NULL) {                     //if the file actually opoened
		file_pointer = data;              //allows access to stream outside function
		return true;
	}

	else { 
		printf("unable to open file: ");    //sort of an error throw
		return false;
	}
}
*/